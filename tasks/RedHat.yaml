---
- name: "Manage software with 'dnf'"
  ansible.builtin.dnf:
    allow_downgrade: "{{ item['allow_downgrade'] | default(omit) }}"
    allowerasing: "{{ item['allowerasing'] | default(omit) }}"
    autoremove: "{{ item['autoremove'] | default(omit) }}"
    bugfix: "{{ item['bugfix'] | default(omit) }}"
    cacheonly: "{{ item['cacheonly'] | default(omit) }}"
    conf_file: "{{ item['conf_file'] | default(omit) }}"
    disable_excludes: "{{ item['disable_excludes'] | default(omit) }}"
    disable_gpg_check: "{{ item['disable_gpg_check'] | default(omit) }}"
    disable_plugin: "{{ item['disable_plugin'] | default(omit) }}"
    disablerepo: "{{ item['disablerepo'] | default(omit) }}"
    download_dir: "{{ item['download_dir'] | default(omit) }}"
    download_only: "{{ item['download_only'] | default(omit) }}"
    enable_plugin: "{{ item['enable_plugin'] | default(omit) }}"
    enablerepo: "{{ item['enablerepo'] | default(omit) }}"
    exclude: "{{ item['exclude'] | default(omit) }}"
    install_repoquery: "{{ item['install_repoquery'] | default(omit) }}"
    install_weak_deps: "{{ item['install_weak_deps'] | default(omit) }}"
    installroot: "{{ item['installroot'] | default(omit) }}"
    list: "{{ item['list'] | default(omit) }}"
    lock_timeout: "{{ item['lock_timeout'] | default(omit) }}"
    name: "{{ item['name'] | mandatory }}"
    nobest: "{{ item['nobest'] | default(omit) }}"
    releasever: "{{ item['releasever'] | default(omit) }}"
    security: "{{ item['security'] | default(omit) }}"
    skip_broken: "{{ item['skip_broken'] | default(omit) }}"
    sslverify: "{{ item['sslverify'] | default(omit) }}"
    state: "{{ item['state'] | default(omit) }}"
    update_cache: "{{ item['update_cache'] | default(omit) }}"
    update_only: "{{ item['update_only'] | default(omit) }}"
    use_backend: "{{ item['use_backend'] | default(omit) }}"
    validate_certs: "{{ item['validate_certs'] | default(omit) }}"
  loop: "{{ software_pkgs }}"
  loop_control:
    label: "{{ item['name'] }} state={{ item['state'] | default('present') }}"
  become: true
  when: ansible_pkg_mgr == "dnf"

- name: "Manage software with 'yum'"
  ansible.builtin.yum:
    name: "{{ item['name'] }}"
    state: "{{ item['state'] | default(omit, true) }}"
    download_only: "{{ item['download_only'] | default(omit, true) }}"
    download_dir: "{{ item['download_dir'] | default(omit, true) }}"
  loop: "{{ software_pkgs }}"
  loop_control:
    label: "{{ item['name'] }} state={{ item['state'] | default('present') }}"
  become: true
  when: ansible_pkg_mgr == "yum"
