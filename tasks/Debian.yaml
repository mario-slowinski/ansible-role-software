---
- name: "Manage software with 'apt'"
  tags: software.pkg
  ansible.builtin.apt:
    name: "{{ item['name'] | default(omit, true) }}"
    allow_unauthenticated: >-
      {{ item['allow_unauthenticated'] | default(omit, true) }}
    autoclean: "{{ item['autoclean'] | default(omit, true) }}"
    autoremove: "{{ item['autoremove'] | default(omit, true) }}"
    cache_valid_time: "{{ item['cache_valid_time'] | default(omit, true) }}"
    deb: "{{ item['deb'] | default(omit, true) }}"
    default_release: "{{ item['default_release'] | default(omit, true) }}"
    dpkg_options: "{{ item['dpkg_options'] | default(omit, true) }}"
    fail_on_autoremove: "{{ item['fail_on_autoremove'] | default(omit, true) }}"
    force: "{{ item['force'] | default(omit, true) }}"
    force_apt_get: "{{ item['force_apt_get'] | default(omit, true) }}"
    install_recommends: "{{ item['install_recommends'] | default(omit, true) }}"
    only_upgrade: "{{ item['only_upgrade'] | default(omit, true) }}"
    policy_rc_d: "{{ item['policy_rc_d'] | default(omit, true) }}"
    purge: "{{ item['purge'] | default(omit, true) }}"
    state: "{{ item['state'] | default(omit, true) }}"
    update_cache: "{{ item['update_cache'] | default(omit, true) }}"
    update_cache_retries: >-
      {{ item['update_cache_retries'] | default(omit, true) }}
    update_cache_retry_max_delay: >-
      {{ item['update_cache_retry_max_delay'] | default(omit, true) }}
    upgrade: "{{ item['upgrade'] | default(omit, true) }}"
  loop: "{{ software_pkgs }}"
  loop_control:
    label: >-
      {{ item['name'] | default(item['deb'], true) }}
      state={{ item['state'] | default('present') }}
  become: true
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: "Manage apt repository key"
  tags: software.key
  ansible.builtin.apt_key:
    data: "{{ item['data'] | default(omit) }}"
    file: "{{ item['file'] | default(omit) }}"
    id: "{{ item['id'] | default(omit) }}"
    keyring: "{{ item['keyring'] | default(omit) }}"
    keyserver: "{{ item['keyserver'] | default(omit) }}"
    url: "{{ item['url'] | default(omit) }}"
    validate_certs: "{{ item['validate_certs'] | default(omit) }}"
    state: "{{ item['state'] | default(omit) }}"
  loop: "{{ software_keys }}"
  become: true

- name: "Manage apt repository"
  tags: software.repo
  ansible.builtin.apt_repository:
    codename: "{{ item['codename'] | default(omit) }}"
    filename: "{{ item['filename'] | default(omit) }}"
    mode: "{{ item['mode'] | default(omit) }}"
    repo: "{{ item['repo'] | mandatory }}"
    update_cache: "{{ item['update_cache'] | default(omit) }}"
    update_cache_retries: "{{ item['update_cache_retries'] | default(omit) }}"
    update_cache_retry_max_delay: >-
      {{ item['update_cache_retry_max_delay'] | default(omit) }}
    validate_certs: "{{ item['validate_certs'] | default(omit) }}"
    state: "{{ item['state'] | default(omit) }}"
  loop: "{{ software_repos }}"
  become: true

- name: "Gather software facts with 'dpkg-query'"
  tags:
    - never
    - software.info
  ansible.builtin.command: dpkg-query -f ${Version} -W {{ item | quote }}
  loop: >-
    {{ software_pkgs
    | selectattr('state', 'ne', 'absent')
    | map(attribute='name') | flatten }}
  changed_when: false
  register: software_info
